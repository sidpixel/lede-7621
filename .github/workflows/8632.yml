#=================================================
# https://github.com/sidpixel/lede
# Description: Build OpenWrt using GitHub Actions
# License: MIT
# Author: sidpixel
#=================================================

name: 8632.yml

on:
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - '8632.config'
      - 'diy-part2.sh'
      - '.github/workflows/8632.yml'

  schedule:
    - cron: 21 3 1 */1 *

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-22.03
  CONFIG_FILE: 8632.config
  OS_ARCH: X86_32
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-22.03
  RELEASE_VERSION: 22.03
  FEEDS_CONF: feeds.conf.default
  READY_SH: ready.sh


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master
        
    - name: Space cleanup and Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo rm -rf /imagegeneration /opt  /usr/local/aws* /usr/local/julia* /usr/share/swift* /usr/share/sbt* /usr/local/share/chromium* /usr/local/share/powershell* 
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip lib32gcc-s1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv1-dev python3.6 zlib1g-dev upx-ucl node-uglify antlr3 gperf wget swig rsync
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

    - name: Clone source code
      run: |
        df -hT $PWD
        rm -rf openwrt
        git clone --single-branch  -b $REPO_BRANCH  $REPO_URL openwrt


    - name: Load custom feeds and Load custom configuration
      working-directory: ./openwrt
      run: |
        mv $GITHUB_WORKSPACE/$FEEDS_CONF feeds.conf.default
        mv $GITHUB_WORKSPACE/$CONFIG_FILE  .config
        bash -x $GITHUB_WORKSPACE/$READY_SH
        cat feeds.conf.default    

    - name: load the  feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean 
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Download package
      working-directory: ./openwrt
      run: |
        make defconfig -j$(nproc)
        make download -j$(nproc)

    - name: Compile the firmware
      working-directory: ./openwrt
      run: |
        #make -j$(nproc)  V=s
        make -j$(nproc)

    - name: Prepare artifact
      run: |
        mkdir -p openwrt/artifact/package
        mkdir -p openwrt/artifact/buildinfo
        rm -rf $(find openwrt/bin/targets/ -type d -name "packages")
        cp -rf $(find openwrt/bin/packages/ -type f -name "*.ipk") openwrt/artifact/package/
        cp -rf $(find openwrt/bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") openwrt/artifact/buildinfo/

    - name: Upload buildinfo
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_buildinfo
        path: openwrt/artifact/buildinfo/

    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt_package
        path: openwrt/artifact/package/

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.OS_ARCH }}-${{ env.FILE_DATE }}
        path: openwrt/artifact/buildinfo/
