#=================================================
# https://github.com/sidpixel/lede
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: sidpixel
#=================================================

name: 7621_clash.yml

on:
  release:
    types: [published]
  push:
    branches: 
      - master
    paths:
      - '7621_clash.config'
      - '.github/workflows/7621_clash.yml'

  schedule:
    - cron: 21 1 15 */1 *
env:
 # REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_URL: https://github.com/Lienol/openwrt
#REPO_URL: https://github.com/openwrt/openwrt
 # REPO_BRANCH: master
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: 7621_clash.config
  OS_ARCH: 7621
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name:  Space cleanup and Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff /mnt/swapfile
        sudo rm -rf /imagegeneration /opt /mnt/swapfile /usr/local/aws* /usr/local/julia* /usr/share/swift* /usr/share/sbt* /usr/local/share/chromium* /usr/local/share/powershell* 
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
        sudo -E apt -y full-upgrade
        sudo -E apt install build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
        gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev \
        file wget
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo -E timedatectl set-timezone "Asia/Shanghai"
    - name: Clone source code
      run: |
        df -hT $PWD
        git clone --single-branch  -b $REPO_BRANCH  $REPO_URL openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j$(nproc)

        
    
    - name: Compile the firmware
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      with:
        name: openwrt-firmware
        path: openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin
        
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.OS_ARCH }}-${{ env.FILE_DATE }}
        files: |
          openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2-squashfs-sysupgrade.bin
          openwrt/bin/targets/ramips/mt7621/openwrt-ramips-mt7621-d-team_newifi-d2.manifest

